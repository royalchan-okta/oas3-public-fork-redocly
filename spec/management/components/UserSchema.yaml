openapi: 3.0.1
info:
  title: User Schema Components
  version: 1.0.0
paths: {}
components:
  schemas:
    UserSchema:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        $schema:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        title:
          type: string
        lastUpdated:
          type: string
          readOnly: true
        created:
          type: string
          readOnly: true
        definitions:
          $ref: '#/components/schemas/UserSchemaDefinitions'
        type:
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/UserSchemaProperties'
        _links:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
      x-okta-tags:
      - UserSchema
    UserSchemaProperties:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/UserSchemaPropertiesProfile'
      x-okta-tags:
      - UserSchema
    UserSchemaPropertiesProfile:
      type: object
      properties:
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaPropertiesProfileItem'
      x-okta-tags:
      - UserSchema
    UserSchemaPropertiesProfileItem:
      type: object
      properties:
        $ref:
          type: string
      x-okta-tags:
      - UserSchema
    UserSchemaDefinitions:
      type: object
      properties:
        base:
          $ref: '#/components/schemas/UserSchemaBase'
        custom:
          $ref: '#/components/schemas/UserSchemaPublic'
      x-okta-tags:
      - UserSchema
    UserSchemaAttribute:
      type: object
      properties:
        title:
          type: string
        type:
          $ref: '#/components/schemas/UserSchemaAttributeType'
        required:
          type: boolean
        mutability:
          type: string
        scope:
          $ref: '#/components/schemas/UserSchemaAttributeScope'
        enum:
          type: array
          items:
            type: string
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
        minLength:
          type: integer
        maxLength:
          type: integer
        description:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributePermission'
        master:
          $ref: '#/components/schemas/UserSchemaAttributeMaster'
        union:
          $ref: '#/components/schemas/UserSchemaAttributeUnion'
        items:
          $ref: '#/components/schemas/UserSchemaAttributeItems'
        pattern:
          type: string
        unique:
          type: string
        externalName:
          type: string
        externalNamespace:
          type: string
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeItems:
      type: object
      properties:
        enum:
          type: array
          items:
            type: string
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeEnum'
        type:
          type: string
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeType:
      type: string
      enum:
      - string
      - boolean
      - number
      - integer
      - array
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeScope:
      type: string
      enum:
      - SELF
      - NONE
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeUnion:
      type: string
      enum:
      - DISABLE
      - ENABLE
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeEnum:
      type: object
      properties:
        const:
          type: string
        title:
          type: string
      x-okta-tags:
      - UserSchema
    UserSchemaAttributePermission:
      type: object
      properties:
        principal:
          type: string
        action:
          type: string
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeMaster:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/UserSchemaAttributeMasterType'
        priority:
          type: array
          items:
            $ref: '#/components/schemas/UserSchemaAttributeMasterPriority'
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeMasterType:
      type: string
      enum:
      - PROFILE_MASTER
      - OKTA
      - OVERRIDE
      x-okta-tags:
      - UserSchema
    UserSchemaAttributeMasterPriority:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
      x-okta-tags:
      - UserSchema
    UserSchemaBase:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        properties:
          $ref: '#/components/schemas/UserSchemaBaseProperties'
        required:
          type: array
          items:
            type: string
      x-okta-tags:
      - UserSchema
    UserSchemaBaseProperties:
      type: object
      properties:
        login:
          $ref: '#/components/schemas/UserSchemaAttribute'
        firstName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        lastName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        middleName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificPrefix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        honorificSuffix:
          $ref: '#/components/schemas/UserSchemaAttribute'
        email:
          $ref: '#/components/schemas/UserSchemaAttribute'
        title:
          $ref: '#/components/schemas/UserSchemaAttribute'
        displayName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        nickName:
          $ref: '#/components/schemas/UserSchemaAttribute'
        profileUrl:
          $ref: '#/components/schemas/UserSchemaAttribute'
        secondEmail:
          $ref: '#/components/schemas/UserSchemaAttribute'
        mobilePhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        primaryPhone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        streetAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        city:
          $ref: '#/components/schemas/UserSchemaAttribute'
        state:
          $ref: '#/components/schemas/UserSchemaAttribute'
        zipCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
        countryCode:
          $ref: '#/components/schemas/UserSchemaAttribute'
        postalAddress:
          $ref: '#/components/schemas/UserSchemaAttribute'
        preferredLanguage:
          $ref: '#/components/schemas/UserSchemaAttribute'
        locale:
          $ref: '#/components/schemas/UserSchemaAttribute'
        timezone:
          $ref: '#/components/schemas/UserSchemaAttribute'
        userType:
          $ref: '#/components/schemas/UserSchemaAttribute'
        employeeNumber:
          $ref: '#/components/schemas/UserSchemaAttribute'
        costCenter:
          $ref: '#/components/schemas/UserSchemaAttribute'
        organization:
          $ref: '#/components/schemas/UserSchemaAttribute'
        division:
          $ref: '#/components/schemas/UserSchemaAttribute'
        department:
          $ref: '#/components/schemas/UserSchemaAttribute'
        managerId:
          $ref: '#/components/schemas/UserSchemaAttribute'
        manager:
          $ref: '#/components/schemas/UserSchemaAttribute'
      x-okta-tags:
      - UserSchema
    UserSchemaPublic:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserSchemaAttribute'
        required:
          type: array
          items:
            type: string
      x-okta-tags:
      - UserSchema
